---
layout: post
title:  "Angular.js 简述"
date:   2016-06-03 08:18:02 +0700
categories: jekyll update
---


AngularJS是为了克服HTML在构建应用上的不足而设计的。HTML是一门很好的为静态文本展示设计的声明式语言，但要构建WEB应用的话它就显得乏力了。所以我做了一些工作（你也可以觉得是小花招）来让浏览器做我想要的事。


# 安装

* $ bower install angular

# 写法

```html

<!DOCTYPE html>
<html lang="en" ng-app="Stu">
<head>
  <meta charset="UTF-8">
  <title>Document</title>
  <link href="http://cdn.bootcss.com/materialize/0.97.5/css/materialize.css" rel="stylesheet">
  <script src="angular/angular.js"></script>
  <script src="angular-animate/angular-animate.js"></script>
</head>
<body ng-controller="mainC">
<input type="text" ng-model="info">
<p>{{info}}</p>
<h1>{{num}}</h1>


<button ng-click="change()">update</button>
</body>
<script>
  var aa = angular.module('Stu',[]);
  aa.controller('mainC',['$scope',function($scope){
    $scope.num = Math.random();
    $scope.change = function(){
      $scope.num = Math.random();
    }
    console.dir($scope)
  }])
</script>
</html>


```



注意：
1.在angular中不可以使用if 和 for 循环
2.{{}}是 ng-bind的简写



```javaascript
var aa = angular.module('Stu',[]);
aa.controller('mainC',['$scope',function($scope){}]
<!-- 动画 -->
var test = angular.module('test',['ngAnimate'])

```



第一个[]为依赖注入
第二个[]为注入内置服务

# ng-

> ng-xxx 不是属性，是表达式；

* ng-app:指令告诉Angular 应该管理页面中的哪一块。如果你正在构建一款纯Angular 应用，那么你应该把ng-app 指令写在<html> 标签中.
* ng-controller:开启控制模块，只能控制模块内的元素;
* ng-model

* ng-repeat;(v in array)
* ng-class;{'red',$index%2===0}如果条件成立，则为元素添加red属性
* ng-if;如果传入参数为true,则显示。false则移除；
* ng-hide;如果参数为true，则隐藏；
* ng-show;如果参数为true，则显示；

* ng-init;

如需要一个toggle变量，则在元素中写ng-init="toggle=false";即可省略去$scope中定义toggle；
```html
<nav ng-click="toggle=!toggle" ng-init="toggle=false" ng-class={'red':toggle}>
```

### 变量

* $index;
* $first;
* $last;
* $even;
* $odd;
* $middle;


# angular-animate

* ng-if/ng-show/ng-hide都用一个类

>ng-hide


* ng-repeat

> .ng-enter

>.ng-enter-active

>.ng-leave

>.ng-leave-active


```html
<!DOCTYPE html>
<html lang="en" ng-app="test">
<head>
  <meta charset="UTF-8">
  <title>Document</title>
  <link href="https://cdn.bootcss.com/materialize/0.97.5/css/materialize.css" rel="stylesheet">
  <!-- <link rel="stylesheet" href="css/index.css"> -->
  <style>

  .nav{
    transition: all 1s ease;


    /*transform: translate(0);*/
  }
  .nav.ng-hide{
    /*transform: translateX(-90%);*/
    opacity: 0;
  }



  .lists.ng-leave,.lists.ng-enter{
    transition: all 1s ease;
  }
  .lists.ng-leave{
    background:#ccc;
  }
  .lists.ng-leave-active,.lists.ng-enter{
    transform: translateX(-100%);
    opacity: 0;
  }

  .lists.ng-enter-active{
    opacity: 1;
    transform: translateX(0);
    background: #ccc;
  }

  </style>
</head>
<body ng-controller="mainC">
  <nav class="nav pink" ng-click="toggle=!toggle" ng-hide="toggle"></nav>
  <nav class="nav yellow" ng-show="toggle" ng-click="toggle=!toggle"></nav>
  <section class="container row">
    <section class="list striped s12" >
      <li class="lists" ng-repeat="v in list" style="height:50px""><a style="margin-right:100px;margin-bottom:30px;">{{v}}</a><a class="btn right" ng-click="deleteL($index)">X</a></li>
      <span class="btn purple" ng-click="addL()">add</span>
    </section>
  </section>
</body>
<script src="https://cdn.bootcss.com/jquery/2.2.4/jquery.js"></script>
<script src="angular/angular.js"></script>
<script src="angular-animate/angular-animate.js"></script>
<script src="angular-route/angular-route.js"></script>
<script src="angular-touch/angular-touch.js"></script>
<script>
var aa = angular.module('test',['ngAnimate']);
aa.controller('mainC',['$scope',function($scope){
  $scope.num = 4
  $scope.toggle = false;
  $scope.list = [
    'a','b','c'
  ]
  $scope.deleteL = function(id){
    $scope.list = $scope.list.filter(function(v,i){
      return i !== id;
    })

  }
  $scope.addL = function(){
    $scope.list.push(Math.random())
  }
}])

</script>
</html>



```
